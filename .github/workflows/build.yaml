name: Build and deploy

on: push

jobs:
  push_service_image:
    name: Push service image to registry
    runs-on: ubuntu-latest
    outputs:
      eureka_server_version: ${{ steps.build_image.outputs.eureka_server_version }}
      config_server_version: ${{ steps.build_image.outputs.config_server_version }}
      gateway_server_version: ${{ steps.build_image.outputs.gateway_server_version }}
      game_handler_version: ${{ steps.build_image.outputs.game_handler_version }}
      auth_service_version: ${{ steps.build_image.outputs.auth_service_version }}
      personal_account_version: ${{ steps.build_image.outputs.personal_account_version }}
      room_service_version: ${{ steps.build_image.outputs.room_service_version }}
      frontend_version: ${{ steps.build_image.outputs.frontend_version }}
      avatars_service_version: ${{ steps.build_image.outputs.avatars_service_version }}
    strategy:
      matrix:
        service:
          - eureka-server
          - config-server
          - gateway-server
          - game-handler
          - auth-service
          - personal-account
          - room-service
          - frontend
          - avatars-service
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Login to YC container registry
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Build image
        id: build_image
        run: |
          touch .env.secrets
          make ${{ matrix.service }} push
  deploy:
    name: Deploy to PROD
    runs-on: ubuntu-latest
    needs:
      - push_service_image
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Create deploy file
        env:
          EUREKA_SERVER_VERSION: ${{ needs.push_service_image.outputs.eureka_server_version }}
          CONFIG_SERVER_VERSION: ${{ needs.push_service_image.outputs.config_server_version }}
          GATEWAY_SERVER_VERSION: ${{ needs.push_service_image.outputs.gateway_server_version }}
          GAME_HANDLER_VERSION: ${{ needs.push_service_image.outputs.game_handler_version }}
          AUTH_SERVICE_VERSION: ${{ needs.push_service_image.outputs.auth_service_version }}
          PERSONAL_ACCOUNT_VERSION: ${{ needs.push_service_image.outputs.personal_account_version }}
          ROOM_SERVICE_VERSION: ${{ needs.push_service_image.outputs.room_service_version }}
          FRONTEND_VERSION: ${{ needs.push_service_image.outputs.frontend_version }}
          AVATARS_SERVICE_VERSION: ${{ needs.push_service_image.outputs.avatars_service_version }}
          ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
        run: ./envsub .env deploy.docker-compose.yml > temp.deploy.docker-compose.yml
      - name: Login to YC CLI
        uses: okar1/yc-cli-install@master
        with:
          SA_KEY: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Run deploy
        run: |
          yc compute instance update-container epdd9td5s2o33u6f5ln7 --docker-compose-file=temp.deploy.docker-compose.yml